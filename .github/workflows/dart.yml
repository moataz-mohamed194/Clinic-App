# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '12'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.6'
     
      - run: flutter clean
      - run: flutter pub get
      - run: flutter build apk
      - run: flutter build appbundle

      # - name: Release
      #   uses: softprops/action-gh-release@v1
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     files: |
      #       build/app/outputs/flutter-apk/app-release.apk
      #       build/app/outputs/bundle/release/app-release.aab

      # - name: Decode google-services.json
      #   env: 
      #       GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
      #   run: echo "$GOOGLE_SERVICES_JSON" > android/app/google-services.json
      # - name: Decode firebase_option
      #   env:
      #     firebase_options_dart: ${{secrets.FIREBASE_OPTION}}
      #   run : echo "$firebase_options_dart" > lib/firebase_options.dart

      
      # - name: upload artifact to Firebase App Distribution
      #   uses: wzieba/Firebase-Distribution-Github-Action@v1
      #   with:
      #       appId: ${{secrets.FIREBASE_APP_ID}}
      #       token: ${{secrets.TOKEN}}
      #       groups: pre-tester
      #       file: build/app/outputs/apk/release/app-release.apk
